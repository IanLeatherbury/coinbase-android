com/coinbase/api/CoinbaseBuilder = Com.Coinbase.Api.CoinbaseBuilder
  <init>()V = .ctor()
  withAccessToken(Ljava/lang/String;)Lcom/coinbase/api/CoinbaseBuilder; = WithAccessToken(string)
  withAccountId(Ljava/lang/String;)Lcom/coinbase/api/CoinbaseBuilder; = WithAccountId(string)
  withApiKey(Ljava/lang/String;Ljava/lang/String;)Lcom/coinbase/api/CoinbaseBuilder; = WithApiKey(string, string)
  withBaseApiURL(Ljava/net/URL;)Lcom/coinbase/api/CoinbaseBuilder; = WithBaseApiURL(Java.Net.URL)
  withBaseOAuthURL(Ljava/net/URL;)Lcom/coinbase/api/CoinbaseBuilder; = WithBaseOAuthURL(Java.Net.URL)
  withSSLContext(Ljavax/net/ssl/SSLContext;)Lcom/coinbase/api/CoinbaseBuilder; = WithSSLContext(Javax.Net.Ssl.SSLContext)
com/coinbase/api/entity/Account = Com.Coinbase.Api.Entity.Account
  <init>()V = .ctor()
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  getType()Lcom/coinbase/api/entity/Account$Type; = GetType()
  isActive()Ljava/lang/Boolean; = IsActive()
  isPrimary()Ljava/lang/Boolean; = IsPrimary()
  setActive(Z)V = SetActive(bool)
  setPrimary(Z)V = SetPrimary(bool)
  setType(Lcom/coinbase/api/entity/Account$Type;)V = SetType(Com.Coinbase.Api.Entity.Account.Type)
com/coinbase/api/entity/AccountChange = Com.Coinbase.Api.Entity.AccountChange
  <init>()V = .ctor()
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getTransactionId()Ljava/lang/String; = TransactionId
  setTransactionId(Ljava/lang/String;)V = TransactionId
  getCache()Lcom/coinbase/api/entity/AccountChange$Cache; = GetCache()
  isConfirmed()Ljava/lang/Boolean; = IsConfirmed()
  setCache(Lcom/coinbase/api/entity/AccountChange$Cache;)V = SetCache(Com.Coinbase.Api.Entity.AccountChange.Cache)
  setConfirmed(Ljava/lang/Boolean;)V = SetConfirmed(Java.Lang.Boolean)
com/coinbase/api/entity/AccountChangesResponse = Com.Coinbase.Api.Entity.AccountChangesResponse
  <init>()V = .ctor()
  getAccountChanges()Ljava/util/List; = AccountChanges
  setAccountChanges(Ljava/util/List;)V = AccountChanges
  getCurrentUser()Lcom/coinbase/api/entity/User; = CurrentUser
  setCurrentUser(Lcom/coinbase/api/entity/User;)V = CurrentUser
com/coinbase/api/entity/AccountResponse = Com.Coinbase.Api.Entity.AccountResponse
  <init>()V = .ctor()
  getAccount()Lcom/coinbase/api/entity/Account; = Account
  setAccount(Lcom/coinbase/api/entity/Account;)V = Account
com/coinbase/api/entity/AccountsResponse = Com.Coinbase.Api.Entity.AccountsResponse
  <init>()V = .ctor()
  getAccounts()Ljava/util/List; = Accounts
  setAccounts(Ljava/util/List;)V = Accounts
com/coinbase/api/entity/Address = Com.Coinbase.Api.Entity.Address
  <init>()V = .ctor()
  getCallbackUrl()Ljava/lang/String; = CallbackUrl
  setCallbackUrl(Ljava/lang/String;)V = CallbackUrl
  getLabel()Ljava/lang/String; = Label
  setLabel(Ljava/lang/String;)V = Label
  getAddress()Ljava/lang/String; = GetAddress()
  setAddress(Ljava/lang/String;)V = SetAddress(string)
com/coinbase/api/entity/AddressesResponse = Com.Coinbase.Api.Entity.AddressesResponse
  <init>()V = .ctor()
  getAddresses()Ljava/util/List; = Addresses
  setAddresses(Ljava/util/List;)V = Addresses
com/coinbase/api/entity/AddressNode = Com.Coinbase.Api.Entity.AddressNode
  <init>()V = .ctor()
  getAddress()Lcom/coinbase/api/entity/Address; = Address
  setAddress(Lcom/coinbase/api/entity/Address;)V = Address
com/coinbase/api/entity/AddressResponse = Com.Coinbase.Api.Entity.AddressResponse
  <init>()V = .ctor()
  getAddress()Ljava/lang/String; = Address
  setAddress(Ljava/lang/String;)V = Address
  getCallbackUrl()Ljava/lang/String; = CallbackUrl
  setCallbackUrl(Ljava/lang/String;)V = CallbackUrl
  getLabel()Ljava/lang/String; = Label
  setLabel(Ljava/lang/String;)V = Label
com/coinbase/api/entity/Application = Com.Coinbase.Api.Entity.Application
  <init>()V = .ctor()
  getClientId()Ljava/lang/String; = ClientId
  setClientId(Ljava/lang/String;)V = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  setClientSecret(Ljava/lang/String;)V = ClientSecret
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  getNumUsers()Ljava/lang/Integer; = NumUsers
  setNumUsers(Ljava/lang/Integer;)V = NumUsers
  getRedirectUri()Ljava/lang/String; = RedirectUri
  setRedirectUri(Ljava/lang/String;)V = RedirectUri
com/coinbase/api/entity/ApplicationResponse = Com.Coinbase.Api.Entity.ApplicationResponse
  <init>()V = .ctor()
  getApplication()Lcom/coinbase/api/entity/Application; = Application
  setApplication(Lcom/coinbase/api/entity/Application;)V = Application
com/coinbase/api/entity/ApplicationsResponse = Com.Coinbase.Api.Entity.ApplicationsResponse
  <init>()V = .ctor()
  getApplications()Ljava/util/List; = Applications
  setApplications(Ljava/util/List;)V = Applications
com/coinbase/api/entity/Button = Com.Coinbase.Api.Entity.Button
  <init>()V = .ctor()
  getAutoRedirect()Ljava/lang/Boolean; = AutoRedirect
  setAutoRedirect(Ljava/lang/Boolean;)V = AutoRedirect
  getCallbackUrl()Ljava/lang/String; = CallbackUrl
  setCallbackUrl(Ljava/lang/String;)V = CallbackUrl
  getCancelUrl()Ljava/lang/String; = CancelUrl
  setCancelUrl(Ljava/lang/String;)V = CancelUrl
  getChoosePrice()Ljava/lang/Boolean; = ChoosePrice
  setChoosePrice(Ljava/lang/Boolean;)V = ChoosePrice
  getCode()Ljava/lang/String; = Code
  setCode(Ljava/lang/String;)V = Code
  getCustom()Ljava/lang/String; = Custom
  setCustom(Ljava/lang/String;)V = Custom
  getCustomSecure()Ljava/lang/Boolean; = CustomSecure
  setCustomSecure(Ljava/lang/Boolean;)V = CustomSecure
  getDescription()Ljava/lang/String; = Description
  setDescription(Ljava/lang/String;)V = Description
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getIncludeAddress()Ljava/lang/Boolean; = IncludeAddress
  setIncludeAddress(Ljava/lang/Boolean;)V = IncludeAddress
  getIncludeEmail()Ljava/lang/Boolean; = IncludeEmail
  setIncludeEmail(Ljava/lang/Boolean;)V = IncludeEmail
  getInfoUrl()Ljava/lang/String; = InfoUrl
  setInfoUrl(Ljava/lang/String;)V = InfoUrl
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  getPriceCurrencyIso()Ljava/lang/String; = PriceCurrencyIso
  setPriceCurrencyIso(Ljava/lang/String;)V = PriceCurrencyIso
  getPriceString()Ljava/lang/String; = PriceString
  setPriceString(Ljava/lang/String;)V = PriceString
  getSuccessUrl()Ljava/lang/String; = SuccessUrl
  setSuccessUrl(Ljava/lang/String;)V = SuccessUrl
  getText()Ljava/lang/String; = Text
  setText(Ljava/lang/String;)V = Text
  getRepeat()Lcom/coinbase/api/entity/Button$Repeat; = GetRepeat()
  getStyle()Lcom/coinbase/api/entity/Button$Style; = GetStyle()
  getType()Lcom/coinbase/api/entity/Button$Type; = GetType()
  setRepeat(Lcom/coinbase/api/entity/Button$Repeat;)V = SetRepeat(Com.Coinbase.Api.Entity.Button.Repeat)
  setStyle(Lcom/coinbase/api/entity/Button$Style;)V = SetStyle(Com.Coinbase.Api.Entity.Button.Style)
  setType(Lcom/coinbase/api/entity/Button$Type;)V = SetType(Com.Coinbase.Api.Entity.Button.Type)
com/coinbase/api/entity/ButtonResponse = Com.Coinbase.Api.Entity.ButtonResponse
  <init>()V = .ctor()
  getButton()Lcom/coinbase/api/entity/Button; = Button
  setButton(Lcom/coinbase/api/entity/Button;)V = Button
com/coinbase/api/entity/Contact = Com.Coinbase.Api.Entity.Contact
  <init>()V = .ctor()
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
com/coinbase/api/entity/ContactNode = Com.Coinbase.Api.Entity.ContactNode
  <init>()V = .ctor()
  getContact()Lcom/coinbase/api/entity/Contact; = Contact
  setContact(Lcom/coinbase/api/entity/Contact;)V = Contact
com/coinbase/api/entity/ContactsResponse = Com.Coinbase.Api.Entity.ContactsResponse
  <init>()V = .ctor()
  getContacts()Ljava/util/List; = Contacts
  setContacts(Ljava/util/List;)V = Contacts
com/coinbase/api/entity/HistoricalPrice = Com.Coinbase.Api.Entity.HistoricalPrice
  <init>()V = .ctor()
com/coinbase/api/entity/Merchant = Com.Coinbase.Api.Entity.Merchant
  <init>()V = .ctor()
  getCompanyName()Ljava/lang/String; = CompanyName
  setCompanyName(Ljava/lang/String;)V = CompanyName
  getLogo()Lcom/coinbase/api/entity/Merchant$Logo; = GetLogo()
  setLogo(Lcom/coinbase/api/entity/Merchant$Logo;)V = SetLogo(Com.Coinbase.Api.Entity.Merchant.Logo)
com/coinbase/api/entity/OAuthCodeRequest = Com.Coinbase.Api.Entity.OAuthCodeRequest
  <init>()V = .ctor()
  getClientId()Ljava/lang/String; = ClientId
  setClientId(Ljava/lang/String;)V = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  setClientSecret(Ljava/lang/String;)V = ClientSecret
  getPassword()Ljava/lang/String; = Password
  setPassword(Ljava/lang/String;)V = Password
  getRedirectUri()Ljava/lang/String; = RedirectUri
  setRedirectUri(Ljava/lang/String;)V = RedirectUri
  getScope()Ljava/lang/String; = Scope
  setScope(Ljava/lang/String;)V = Scope
  getToken()Ljava/lang/String; = Token
  setToken(Ljava/lang/String;)V = Token
  getUsername()Ljava/lang/String; = Username
  setUsername(Ljava/lang/String;)V = Username
  getMeta()Lcom/coinbase/api/entity/OAuthCodeRequest$Meta; = GetMeta()
  setMeta(Lcom/coinbase/api/entity/OAuthCodeRequest$Meta;)V = SetMeta(Com.Coinbase.Api.Entity.OAuthCodeRequest.Meta)
com/coinbase/api/entity/OAuthCodeResponse = Com.Coinbase.Api.Entity.OAuthCodeResponse
  <init>()V = .ctor()
  getCode()Ljava/lang/String; = Code
  setCode(Ljava/lang/String;)V = Code
com/coinbase/api/entity/OAuthTokensRequest = Com.Coinbase.Api.Entity.OAuthTokensRequest
  <init>()V = .ctor()
  getClientId()Ljava/lang/String; = ClientId
  setClientId(Ljava/lang/String;)V = ClientId
  getClientSecret()Ljava/lang/String; = ClientSecret
  setClientSecret(Ljava/lang/String;)V = ClientSecret
  getCode()Ljava/lang/String; = Code
  setCode(Ljava/lang/String;)V = Code
  getRedirectUri()Ljava/lang/String; = RedirectUri
  setRedirectUri(Ljava/lang/String;)V = RedirectUri
  getRefreshToken()Ljava/lang/String; = RefreshToken
  setRefreshToken(Ljava/lang/String;)V = RefreshToken
  getGrantType()Lcom/coinbase/api/entity/OAuthTokensRequest$GrantType; = GetGrantType()
  setGrantType(Lcom/coinbase/api/entity/OAuthTokensRequest$GrantType;)V = SetGrantType(Com.Coinbase.Api.Entity.OAuthTokensRequest.GrantType)
com/coinbase/api/entity/OAuthTokensResponse = Com.Coinbase.Api.Entity.OAuthTokensResponse
  <init>()V = .ctor()
  getAccessToken()Ljava/lang/String; = AccessToken
  setAccessToken(Ljava/lang/String;)V = AccessToken
  getExpireIn()Ljava/lang/Integer; = ExpireIn
  setExpireIn(Ljava/lang/Integer;)V = ExpireIn
  getRefreshToken()Ljava/lang/String; = RefreshToken
  setRefreshToken(Ljava/lang/String;)V = RefreshToken
  getScope()Ljava/lang/String; = Scope
  setScope(Ljava/lang/String;)V = Scope
  getTokenType()Ljava/lang/String; = TokenType
  setTokenType(Ljava/lang/String;)V = TokenType
com/coinbase/api/entity/Order = Com.Coinbase.Api.Entity.Order
  <init>()V = .ctor()
  getButton()Lcom/coinbase/api/entity/Button; = Button
  setButton(Lcom/coinbase/api/entity/Button;)V = Button
  getCustom()Ljava/lang/String; = Custom
  setCustom(Ljava/lang/String;)V = Custom
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getReceiveAddress()Ljava/lang/String; = ReceiveAddress
  setReceiveAddress(Ljava/lang/String;)V = ReceiveAddress
  getRefundAddress()Ljava/lang/String; = RefundAddress
  setRefundAddress(Ljava/lang/String;)V = RefundAddress
  getTransaction()Lcom/coinbase/api/entity/Transaction; = Transaction
  setTransaction(Lcom/coinbase/api/entity/Transaction;)V = Transaction
  getStatus()Lcom/coinbase/api/entity/Order$Status; = GetStatus()
  setStatus(Lcom/coinbase/api/entity/Order$Status;)V = SetStatus(Com.Coinbase.Api.Entity.Order.Status)
com/coinbase/api/entity/OrderNode = Com.Coinbase.Api.Entity.OrderNode
  <init>()V = .ctor()
  getOrder()Lcom/coinbase/api/entity/Order; = Order
  setOrder(Lcom/coinbase/api/entity/Order;)V = Order
com/coinbase/api/entity/OrderResponse = Com.Coinbase.Api.Entity.OrderResponse
  <init>()V = .ctor()
  getOrder()Lcom/coinbase/api/entity/Order; = Order
  setOrder(Lcom/coinbase/api/entity/Order;)V = Order
com/coinbase/api/entity/OrdersResponse = Com.Coinbase.Api.Entity.OrdersResponse
  <init>()V = .ctor()
  getOrders()Ljava/util/List; = Orders
  setOrders(Ljava/util/List;)V = Orders
com/coinbase/api/entity/PaymentMethod = Com.Coinbase.Api.Entity.PaymentMethod
  <init>()V = .ctor()
  getAccountId()Ljava/lang/String; = AccountId
  setAccountId(Ljava/lang/String;)V = AccountId
  getCurrency()Ljava/lang/String; = Currency
  setCurrency(Ljava/lang/String;)V = Currency
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  canBuy()Ljava/lang/Boolean; = CanBuy()
  canSell()Ljava/lang/Boolean; = CanSell()
  getType()Lcom/coinbase/api/entity/PaymentMethod$Type; = GetType()
  setCanBuy(Ljava/lang/Boolean;)V = SetCanBuy(Java.Lang.Boolean)
  setCanSell(Ljava/lang/Boolean;)V = SetCanSell(Java.Lang.Boolean)
  setType(Lcom/coinbase/api/entity/PaymentMethod$Type;)V = SetType(Com.Coinbase.Api.Entity.PaymentMethod.Type)
com/coinbase/api/entity/PaymentMethodNode = Com.Coinbase.Api.Entity.PaymentMethodNode
  <init>()V = .ctor()
  getPaymentMethod()Lcom/coinbase/api/entity/PaymentMethod; = PaymentMethod
  setPaymentMethod(Lcom/coinbase/api/entity/PaymentMethod;)V = PaymentMethod
com/coinbase/api/entity/PaymentMethodsResponse = Com.Coinbase.Api.Entity.PaymentMethodsResponse
  <init>()V = .ctor()
  getDefaultBuy()Ljava/lang/String; = DefaultBuy
  setDefaultBuy(Ljava/lang/String;)V = DefaultBuy
  getDefaultSell()Ljava/lang/String; = DefaultSell
  setDefaultSell(Ljava/lang/String;)V = DefaultSell
  getPaymentMethods()Ljava/util/List; = PaymentMethods
  setPaymentMethods(Ljava/util/List;)V = PaymentMethods
com/coinbase/api/entity/Quote = Com.Coinbase.Api.Entity.Quote
  <init>()V = .ctor()
com/coinbase/api/entity/RecurringPayment = Com.Coinbase.Api.Entity.RecurringPayment
  <init>()V = .ctor()
  INDEFINITE = Indefinite
  getButton()Lcom/coinbase/api/entity/Button; = Button
  setButton(Lcom/coinbase/api/entity/Button;)V = Button
  getCustom()Ljava/lang/String; = Custom
  setCustom(Ljava/lang/String;)V = Custom
  getDescription()Ljava/lang/String; = Description
  setDescription(Ljava/lang/String;)V = Description
  getFrom()Ljava/lang/String; = From
  setFrom(Ljava/lang/String;)V = From
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getNotes()Ljava/lang/String; = Notes
  setNotes(Ljava/lang/String;)V = Notes
  getRepeat()Lcom/coinbase/api/entity/Button$Repeat; = Repeat
  setRepeat(Lcom/coinbase/api/entity/Button$Repeat;)V = Repeat
  getTimes()Ljava/lang/Integer; = Times
  setTimes(Ljava/lang/Integer;)V = Times
  getTimesRun()Ljava/lang/Integer; = TimesRun
  setTimesRun(Ljava/lang/Integer;)V = TimesRun
  getTo()Ljava/lang/String; = To
  setTo(Ljava/lang/String;)V = To
  getStartType()Lcom/coinbase/api/entity/RecurringPayment$StartType; = GetStartType()
  getStatus()Lcom/coinbase/api/entity/RecurringPayment$Status; = GetStatus()
  setStartType(Lcom/coinbase/api/entity/RecurringPayment$StartType;)V = SetStartType(Com.Coinbase.Api.Entity.RecurringPayment.StartType)
  setStatus(Lcom/coinbase/api/entity/RecurringPayment$Status;)V = SetStatus(Com.Coinbase.Api.Entity.RecurringPayment.Status)
com/coinbase/api/entity/RecurringPaymentNode = Com.Coinbase.Api.Entity.RecurringPaymentNode
  <init>()V = .ctor()
  getRecurringPayment()Lcom/coinbase/api/entity/RecurringPayment; = RecurringPayment
  setRecurringPayment(Lcom/coinbase/api/entity/RecurringPayment;)V = RecurringPayment
com/coinbase/api/entity/RecurringPaymentResponse = Com.Coinbase.Api.Entity.RecurringPaymentResponse
  <init>()V = .ctor()
  getRecurringPayment()Lcom/coinbase/api/entity/RecurringPayment; = RecurringPayment
  setRecurringPayment(Lcom/coinbase/api/entity/RecurringPayment;)V = RecurringPayment
com/coinbase/api/entity/RecurringPaymentsResponse = Com.Coinbase.Api.Entity.RecurringPaymentsResponse
  <init>()V = .ctor()
  getRecurringPayments()Ljava/util/List; = RecurringPayments
  setRecurringPayments(Ljava/util/List;)V = RecurringPayments
com/coinbase/api/entity/Report = Com.Coinbase.Api.Entity.Report
  <init>()V = .ctor()
  INFINITE = Infinite
  getCallbackUrl()Ljava/lang/String; = CallbackUrl
  setCallbackUrl(Ljava/lang/String;)V = CallbackUrl
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getInfinite()Ljava/lang/Integer; = Infinite
  getNextRunDate()Ljava/lang/String; = NextRunDate
  getNextRunTime()Ljava/lang/String; = NextRunTime
  getTimeRangeEnd()Ljava/lang/String; = TimeRangeEnd
  getTimeRangeStart()Ljava/lang/String; = TimeRangeStart
  getTimes()Ljava/lang/Integer; = Times
  setTimes(Ljava/lang/Integer;)V = Times
  getTimesRun()Ljava/lang/Integer; = TimesRun
  setTimesRun(Ljava/lang/Integer;)V = TimesRun
  getRepeat()Lcom/coinbase/api/entity/Report$Repeat; = GetRepeat()
  getStartType()Lcom/coinbase/api/entity/Report$StartType; = GetStartType()
  getStatus()Lcom/coinbase/api/entity/Report$Status; = GetStatus()
  getTimeRange()Lcom/coinbase/api/entity/Report$TimeRange; = GetTimeRange()
  getType()Lcom/coinbase/api/entity/Report$Type; = GetType()
  setRepeat(Lcom/coinbase/api/entity/Report$Repeat;)V = SetRepeat(Com.Coinbase.Api.Entity.Report.Repeat)
  setStartType(Lcom/coinbase/api/entity/Report$StartType;)V = SetStartType(Com.Coinbase.Api.Entity.Report.StartType)
  setStatus(Lcom/coinbase/api/entity/Report$Status;)V = SetStatus(Com.Coinbase.Api.Entity.Report.Status)
  setTimeRange(Lcom/coinbase/api/entity/Report$TimeRange;)V = SetTimeRange(Com.Coinbase.Api.Entity.Report.TimeRange)
  setType(Lcom/coinbase/api/entity/Report$Type;)V = SetType(Com.Coinbase.Api.Entity.Report.Type)
com/coinbase/api/entity/ReportNode = Com.Coinbase.Api.Entity.ReportNode
  <init>()V = .ctor()
  getReport()Lcom/coinbase/api/entity/Report; = Report
  setReport(Lcom/coinbase/api/entity/Report;)V = Report
com/coinbase/api/entity/ReportResponse = Com.Coinbase.Api.Entity.ReportResponse
  <init>()V = .ctor()
  getReport()Lcom/coinbase/api/entity/Report; = Report
  setReport(Lcom/coinbase/api/entity/Report;)V = Report
com/coinbase/api/entity/ReportsResponse = Com.Coinbase.Api.Entity.ReportsResponse
  <init>()V = .ctor()
  getReports()Ljava/util/List; = Reports
  setReports(Ljava/util/List;)V = Reports
com/coinbase/api/entity/Request = Com.Coinbase.Api.Entity.Request
  <init>()V = .ctor()
  getAccount()Lcom/coinbase/api/entity/Account; = Account
  setAccount(Lcom/coinbase/api/entity/Account;)V = Account
  getAccountId()Ljava/lang/String; = AccountId
  setAccountId(Ljava/lang/String;)V = AccountId
  getAddress()Lcom/coinbase/api/entity/Address; = Address
  setAddress(Lcom/coinbase/api/entity/Address;)V = Address
  getApplication()Lcom/coinbase/api/entity/Application; = Application
  setApplication(Lcom/coinbase/api/entity/Application;)V = Application
  getButton()Lcom/coinbase/api/entity/Button; = Button
  setButton(Lcom/coinbase/api/entity/Button;)V = Button
  getClientId()Ljava/lang/String; = ClientId
  setClientId(Ljava/lang/String;)V = ClientId
  getCommit()Ljava/lang/Boolean; = Commit
  setCommit(Ljava/lang/Boolean;)V = Commit
  getCurrency()Ljava/lang/String; = Currency
  setCurrency(Ljava/lang/String;)V = Currency
  getPaymentMethodId()Ljava/lang/String; = PaymentMethodId
  setPaymentMethodId(Ljava/lang/String;)V = PaymentMethodId
  getQty()Ljava/lang/Double; = Qty
  setQty(Ljava/lang/Double;)V = Qty
  getReport()Lcom/coinbase/api/entity/Report; = Report
  setReport(Lcom/coinbase/api/entity/Report;)V = Report
  getScopes()Ljava/lang/String; = Scopes
  setScopes(Ljava/lang/String;)V = Scopes
  getTokenId()Ljava/lang/String; = TokenId
  setTokenId(Ljava/lang/String;)V = TokenId
  getTransaction()Lcom/coinbase/api/entity/Transaction; = Transaction
  setTransaction(Lcom/coinbase/api/entity/Transaction;)V = Transaction
  getUser()Lcom/coinbase/api/entity/User; = User
  setUser(Lcom/coinbase/api/entity/User;)V = User
com/coinbase/api/entity/Response = Com.Coinbase.Api.Entity.Response
  <init>()V = .ctor()
  getCurrentPage()I = CurrentPage
  setCurrentPage(I)V = CurrentPage
  getErrors()Ljava/lang/String; = Errors
  setErrors(Ljava/lang/String;)V = Errors
  hasErrors()Z = HasErrors
  getNumPages()I = NumPages
  setNumPages(I)V = NumPages
  getTotalCount()I = TotalCount
  setTotalCount(I)V = TotalCount
  isSuccess()Ljava/lang/Boolean; = IsSuccess()
  setError(Ljava/lang/String;)V = SetError(string)
  setSuccess(Ljava/lang/Boolean;)V = SetSuccess(Java.Lang.Boolean)
com/coinbase/api/entity/RevokeTokenRequest = Com.Coinbase.Api.Entity.RevokeTokenRequest
  <init>()V = .ctor()
  getToken()Ljava/lang/String; = Token
  setToken(Ljava/lang/String;)V = Token
com/coinbase/api/entity/Token = Com.Coinbase.Api.Entity.Token
  <init>()V = .ctor()
  getAddress()Ljava/lang/String; = Address
  setAddress(Ljava/lang/String;)V = Address
  getTokenId()Ljava/lang/String; = TokenId
  setTokenId(Ljava/lang/String;)V = TokenId
com/coinbase/api/entity/TokenResponse = Com.Coinbase.Api.Entity.TokenResponse
  <init>()V = .ctor()
  getToken()Lcom/coinbase/api/entity/Token; = Token
  setToken(Lcom/coinbase/api/entity/Token;)V = Token
com/coinbase/api/entity/Transaction = Com.Coinbase.Api.Entity.Transaction
  <init>()V = .ctor()
  getAmountCurrencyIso()Ljava/lang/String; = AmountCurrencyIso
  setAmountCurrencyIso(Ljava/lang/String;)V = AmountCurrencyIso
  getAmountString()Ljava/lang/String; = AmountString
  setAmountString(Ljava/lang/String;)V = AmountString
  getConfirmations()Ljava/lang/Integer; = Confirmations
  setConfirmations(Ljava/lang/Integer;)V = Confirmations
  getFrom()Ljava/lang/String; = From
  setFrom(Ljava/lang/String;)V = From
  getHash()Ljava/lang/String; = Hash
  setHash(Ljava/lang/String;)V = Hash
  getHsh()Ljava/lang/String; = Hsh
  setHsh(Ljava/lang/String;)V = Hsh
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getIdem()Ljava/lang/String; = Idem
  setIdem(Ljava/lang/String;)V = Idem
  getInstantBuy()Ljava/lang/Boolean; = InstantBuy
  setInstantBuy(Ljava/lang/Boolean;)V = InstantBuy
  getNotes()Ljava/lang/String; = Notes
  setNotes(Ljava/lang/String;)V = Notes
  getOrderId()Ljava/lang/String; = OrderId
  setOrderId(Ljava/lang/String;)V = OrderId
  getRecipient()Lcom/coinbase/api/entity/User; = Recipient
  setRecipient(Lcom/coinbase/api/entity/User;)V = Recipient
  getRecipientAccount()Lcom/coinbase/api/entity/Account; = RecipientAccount
  setRecipientAccount(Lcom/coinbase/api/entity/Account;)V = RecipientAccount
  getRecipientAddress()Ljava/lang/String; = RecipientAddress
  setRecipientAddress(Ljava/lang/String;)V = RecipientAddress
  getSender()Lcom/coinbase/api/entity/User; = Sender
  setSender(Lcom/coinbase/api/entity/User;)V = Sender
  getSenderAccount()Lcom/coinbase/api/entity/Account; = SenderAccount
  setSenderAccount(Lcom/coinbase/api/entity/Account;)V = SenderAccount
  getTo()Ljava/lang/String; = To
  setTo(Ljava/lang/String;)V = To
  getUserFee()Ljava/lang/String; = UserFee
  getDetailedStatus()Lcom/coinbase/api/entity/Transaction$DetailedStatus; = GetDetailedStatus()
  getStatus()Lcom/coinbase/api/entity/Transaction$Status; = GetStatus()
  isRequest()Ljava/lang/Boolean; = IsRequest()
  setDetailedStatus(Lcom/coinbase/api/entity/Transaction$DetailedStatus;)V = SetDetailedStatus(Com.Coinbase.Api.Entity.Transaction.DetailedStatus)
  setRequest(Ljava/lang/Boolean;)V = SetRequest(Java.Lang.Boolean)
  setStatus(Lcom/coinbase/api/entity/Transaction$Status;)V = SetStatus(Com.Coinbase.Api.Entity.Transaction.Status)
  setUserFee(Ljava/math/BigDecimal;)V = SetUserFee(Java.Math.BigDecimal)
com/coinbase/api/entity/TransactionNode = Com.Coinbase.Api.Entity.TransactionNode
  <init>()V = .ctor()
  getTransaction()Lcom/coinbase/api/entity/Transaction; = Transaction
  setTransaction(Lcom/coinbase/api/entity/Transaction;)V = Transaction
com/coinbase/api/entity/TransactionResponse = Com.Coinbase.Api.Entity.TransactionResponse
  <init>()V = .ctor()
  getTransaction()Lcom/coinbase/api/entity/Transaction; = Transaction
  setTransaction(Lcom/coinbase/api/entity/Transaction;)V = Transaction
com/coinbase/api/entity/TransactionsResponse = Com.Coinbase.Api.Entity.TransactionsResponse
  <init>()V = .ctor()
  getCurrentUser()Lcom/coinbase/api/entity/User; = CurrentUser
  setCurrentUser(Lcom/coinbase/api/entity/User;)V = CurrentUser
  getTransactions()Ljava/util/List; = Transactions
  setTransactions(Ljava/util/List;)V = Transactions
com/coinbase/api/entity/Transfer = Com.Coinbase.Api.Entity.Transfer
  <init>()V = .ctor()
  getCode()Ljava/lang/String; = Code
  setCode(Ljava/lang/String;)V = Code
  getDescription()Ljava/lang/String; = Description
  setDescription(Ljava/lang/String;)V = Description
  getTransactionId()Ljava/lang/String; = TransactionId
  setTransactionId(Ljava/lang/String;)V = TransactionId
  getStatus()Lcom/coinbase/api/entity/Transfer$Status; = GetStatus()
  getType()Lcom/coinbase/api/entity/Transfer$Type; = GetType()
  setStatus(Lcom/coinbase/api/entity/Transfer$Status;)V = SetStatus(Com.Coinbase.Api.Entity.Transfer.Status)
  setType(Lcom/coinbase/api/entity/Transfer$Type;)V = SetType(Com.Coinbase.Api.Entity.Transfer.Type)
com/coinbase/api/entity/TransferNode = Com.Coinbase.Api.Entity.TransferNode
  <init>()V = .ctor()
  getTransfer()Lcom/coinbase/api/entity/Transfer; = Transfer
  setTransfer(Lcom/coinbase/api/entity/Transfer;)V = Transfer
com/coinbase/api/entity/TransferResponse = Com.Coinbase.Api.Entity.TransferResponse
  <init>()V = .ctor()
  getTransfer()Lcom/coinbase/api/entity/Transfer; = Transfer
  setTransfer(Lcom/coinbase/api/entity/Transfer;)V = Transfer
com/coinbase/api/entity/TransfersResponse = Com.Coinbase.Api.Entity.TransfersResponse
  <init>()V = .ctor()
  getTransfers()Ljava/util/List; = Transfers
  setTransfers(Ljava/util/List;)V = Transfers
com/coinbase/api/entity/User = Com.Coinbase.Api.Entity.User
  <init>()V = .ctor()
  getAcceptAgreement()Ljava/lang/Boolean; = AcceptAgreement
  setAcceptAgreement(Ljava/lang/Boolean;)V = AcceptAgreement
  getAvatarUrl()Ljava/lang/String; = AvatarUrl
  setAvatarUrl(Ljava/lang/String;)V = AvatarUrl
  getBitcoinUnits()Ljava/lang/String; = BitcoinUnits
  setBitcoinUnits(Ljava/lang/String;)V = BitcoinUnits
  getBuyLevel()Ljava/lang/Integer; = BuyLevel
  setBuyLevel(Ljava/lang/Integer;)V = BuyLevel
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
  getEmailVerified()Ljava/lang/Boolean; = EmailVerified
  setEmailVerified(Ljava/lang/Boolean;)V = EmailVerified
  getId()Ljava/lang/String; = Id
  setId(Ljava/lang/String;)V = Id
  getLocation()Ljava/lang/String; = Location
  setLocation(Ljava/lang/String;)V = Location
  getMerchant()Lcom/coinbase/api/entity/Merchant; = Merchant
  setMerchant(Lcom/coinbase/api/entity/Merchant;)V = Merchant
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  getPassword()Ljava/lang/String; = Password
  setPassword(Ljava/lang/String;)V = Password
  getProfileDescription()Ljava/lang/String; = ProfileDescription
  setProfileDescription(Ljava/lang/String;)V = ProfileDescription
  getReceiveAddress()Ljava/lang/String; = ReceiveAddress
  setReceiveAddress(Ljava/lang/String;)V = ReceiveAddress
  getReferrerId()Ljava/lang/String; = ReferrerId
  setReferrerId(Ljava/lang/String;)V = ReferrerId
  getSellLevel()Ljava/lang/Integer; = SellLevel
  setSellLevel(Ljava/lang/Integer;)V = SellLevel
  getTimeZone()Ljava/lang/String; = TimeZone
  setTimeZone(Ljava/lang/String;)V = TimeZone
  getUsername()Ljava/lang/String; = Username
  setUsername(Ljava/lang/String;)V = Username
com/coinbase/api/entity/UserNode = Com.Coinbase.Api.Entity.UserNode
  <init>()V = .ctor()
  getUser()Lcom/coinbase/api/entity/User; = User
  setUser(Lcom/coinbase/api/entity/User;)V = User
com/coinbase/api/entity/UserResponse = Com.Coinbase.Api.Entity.UserResponse
  <init>()V = .ctor()
  getOauth()Lcom/coinbase/api/entity/OAuthTokensResponse; = Oauth
  setOauth(Lcom/coinbase/api/entity/OAuthTokensResponse;)V = Oauth
  getUser()Lcom/coinbase/api/entity/User; = User
  setUser(Lcom/coinbase/api/entity/User;)V = User
com/coinbase/api/entity/UsersResponse = Com.Coinbase.Api.Entity.UsersResponse
  <init>()V = .ctor()
  getUsers()Ljava/util/List; = Users
  setUsers(Ljava/util/List;)V = Users
com/coinbase/api/exception/CoinbaseException = Com.Coinbase.Api.Exception.CoinbaseException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/coinbase/api/exception/CredentialsIncorrectException = Com.Coinbase.Api.Exception.CredentialsIncorrectException
  <init>()V = .ctor()
com/coinbase/api/exception/TwoFactorIncorrectException = Com.Coinbase.Api.Exception.TwoFactorIncorrectException
  <init>()V = .ctor()
com/coinbase/api/exception/TwoFactorRequiredException = Com.Coinbase.Api.Exception.TwoFactorRequiredException
  <init>()V = .ctor()
com/coinbase/api/exception/UnauthorizedDeviceException = Com.Coinbase.Api.Exception.UnauthorizedDeviceException
  <init>()V = .ctor()
com/coinbase/api/exception/UnauthorizedException = Com.Coinbase.Api.Exception.UnauthorizedException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/coinbase/api/exception/UnspecifiedAccount = Com.Coinbase.Api.Exception.UnspecifiedAccount
  <init>()V = .ctor()
com/coinbase/api/ObjectMapperProvider = Com.Coinbase.Api.ObjectMapperProvider
  <init>()V = .ctor()
